service: sessions-feedback

plugins:
  - serverless-python-requirements
provider:
  name: aws
  runtime: python3.9
  stackName: ${self:service}-CF-Template
  logRetentionInDays: 7
  region: eu-west-1
  memorySize: 128
  iamRoleStatements:
    - Effect: Allow
      Action:
       - dynamodb:Query
       - dynamodb:Scan
       - dynamodb:GetItem
       - dynamodb:PutItem
       - dynamodb:GetRecords
       - dynamodb:GetShardIterator
       - dynamodb:DescribeStream
       - dynamodb:ListStreams
      Resource:
        - Fn::GetAtt:
          - feebackSessions
          - Arn
        - Fn::GetAtt:
          - feebackScores
          - Arn
        - Fn::Join:
          - ""
          - - Fn::GetAtt:
              - feebackScores
              - Arn
            - "/stream/*"
        - Fn::Join:
          - ""
          - - Fn::GetAtt:
              - feebackSessions
              - Arn
            - "/stream/*"

  stage: dev

functions:
  GetSession:
    handler: sessions_feedback.get_session
    events:
      - http:
          path: info/get_session
          method: get
  WriteFeedback:
    handler: sessions_feedback.write_feedback
    events:
      - http:
          path: info/store_feedback
          method: post
          cors: true
          integration: lambda
  StreamData:
    handler: session-feedback-scores-to-firehose.lambda_handler
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - feebackScores
              - Arn


resources:
  Resources:
    feebackSessions:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-Sessions
        AttributeDefinitions:
          - AttributeName: session_id
            AttributeType: S
        KeySchema:
          - AttributeName: session_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    feebackScores:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-Scores
        AttributeDefinitions:
          - AttributeName: session_id
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: session_id
            KeyType: HASH
          - AttributeName: user_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    #Cognito
    CognitoIdentityPool:
      Type: AWS::Cognito::IdentityPool
      Properties:
        IdentityPoolName: SessionsFeedbackIdentityPool
        AllowUnauthenticatedIdentities: true

    # IAM roles
    CognitoIdentityPoolRoles:
      Type: AWS::Cognito::IdentityPoolRoleAttachment
      Properties:
        IdentityPoolId:
          Ref: CognitoIdentityPool
        Roles:
          unauthenticated:
            Fn::GetAtt: [CognitoUnAuthRole, Arn]

    # IAM role used for unauthenticated users
    CognitoUnAuthRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Principal:
                Federated: 'cognito-identity.amazonaws.com'
              Action:
                - 'sts:AssumeRoleWithWebIdentity'
              Condition:
                StringEquals:
                  'cognito-identity.amazonaws.com:aud':
                    Ref: CognitoIdentityPool
                'ForAnyValue:StringLike':
                  'cognito-identity.amazonaws.com:amr': unauthenticated
        Policies:
          - PolicyName: SessionsFeedbackCognitoUnAuthorizedPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: 'Allow'
                  Action:
                    - 'mobileanalytics:PutEvents'
                    - 'cognito-sync:*'
                    - 'cognito-identity:*'
                  Resource: '*'

                # Allow users to invoke our API
                - Effect: 'Allow'
                  Action:
                    - dynamodb:Query
                    - dynamodb:Scan
                    - dynamodb:GetItem
                  Resource:
                    - Fn::GetAtt:
                      - feebackSessions
                      - Arn
